{"version":3,"file":"static/js/911.de3e4e1c.chunk.js","mappings":"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","sources":["../node_modules/vfile-location/lib/index.js","../node_modules/hast-util-from-parse5/lib/index.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/common/unicode.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/common/error-codes.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/tokenizer/preprocessor.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/common/token.js","../node_modules/hast-util-from-html/node_modules/entities/src/generated/decode-data-html.ts","../node_modules/hast-util-from-html/node_modules/entities/src/decode-codepoint.ts","../node_modules/hast-util-from-html/node_modules/entities/src/decode.ts","../node_modules/hast-util-from-html/node_modules/parse5/dist/common/html.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/tokenizer/index.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/parser/open-element-stack.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/parser/formatting-element-list.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/tree-adapters/default.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/common/doctype.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/common/foreign-content.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/parser/index.js","../node_modules/hast-util-from-html/node_modules/entities/src/escape.ts","../node_modules/hast-util-from-html/node_modules/parse5/dist/serializer/index.js","../node_modules/hast-util-from-html/node_modules/parse5/dist/index.js","../node_modules/hast-util-from-html/lib/errors.js","../node_modules/hast-util-from-html/lib/index.js","../node_modules/rehype-parse/lib/index.js","../node_modules/web-namespaces/index.js","../node_modules/hast-util-parse-selector/lib/index.js","../node_modules/hastscript/lib/create-h.js","../node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../node_modules/hastscript/lib/index.js"],"sourcesContent":["/**\n * @import {VFile, Value} from 'vfile'\n * @import {Location} from 'vfile-location'\n */\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  return {toOffset, toPoint}\n\n  /** @type {Location['toPoint']} */\n  function toPoint(offset) {\n    if (typeof offset === 'number' && offset > -1 && offset <= value.length) {\n      let index = 0\n\n      while (true) {\n        let end = indices[index]\n\n        if (end === undefined) {\n          const eol = next(value, indices[index - 1])\n          end = eol === -1 ? value.length + 1 : eol + 1\n          indices[index] = end\n        }\n\n        if (end > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n\n        index++\n      }\n    }\n  }\n\n  /** @type {Location['toOffset']} */\n  function toOffset(point) {\n    if (\n      point &&\n      typeof point.line === 'number' &&\n      typeof point.column === 'number' &&\n      !Number.isNaN(point.line) &&\n      !Number.isNaN(point.column)\n    ) {\n      while (indices.length < point.line) {\n        const from = indices[indices.length - 1]\n        const eol = next(value, from)\n        const end = eol === -1 ? value.length + 1 : eol + 1\n        if (from === end) break\n        indices.push(end)\n      }\n\n      const offset =\n        (point.line > 1 ? indices[point.line - 2] : 0) + point.column - 1\n      // The given `column` could not exist on this line.\n      if (offset < indices[point.line - 1]) return offset\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @param {number} from\n */\nfunction next(value, from) {\n  const cr = value.indexOf('\\r', from)\n  const lf = value.indexOf('\\n', from)\n  if (lf === -1) return cr\n  if (cr === -1 || cr + 1 === lf) return lf\n  return cr < lf ? cr : lf\n}\n","/**\n * @import {ElementData, Element, Nodes, RootContent, Root} from 'hast'\n * @import {DefaultTreeAdapterMap, Token} from 'parse5'\n * @import {Schema} from 'property-information'\n * @import {Point, Position} from 'unist'\n * @import {VFile} from 'vfile'\n * @import {Options} from 'hast-util-from-parse5'\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {DefaultTreeAdapterMap['node']} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['node']} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {DefaultTreeAdapterMap['commentNode']} */ (\n        node\n      )\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference =\n        /** @type {DefaultTreeAdapterMap['document'] | DefaultTreeAdapterMap['documentFragment']} */ (\n          node\n        )\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const document = String(state.file)\n        const loc = location(document)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(document.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {DefaultTreeAdapterMap['documentType']} */ (\n        node\n      )\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {DefaultTreeAdapterMap['textNode']} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {DefaultTreeAdapterMap['element']} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<DefaultTreeAdapterMap['node']>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['element']} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const properties = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      properties[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const x = state.schema.space === 'svg' ? s : h\n  const result = x(node.tagName, properties, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {DefaultTreeAdapterMap['template']} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['node']} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {Token.ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const properties = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            properties[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = properties\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {Token.Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n})(CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR || (ERR = {}));\n","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code, cpOffset) {\n        const { line, col, offset } = this;\n        const startCol = col + cpOffset;\n        const startOffset = offset + cpOffset;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol,\n            endCol: startCol,\n            startOffset,\n            endOffset: startOffset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code, 0));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n","// Generated using scripts/write-decode-map.ts\n\nexport const htmlDecodeTree: Uint16Array = /* #__PURE__ */ new Uint16Array(\n    // prettier-ignore\n    /* #__PURE__ */ \"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n        .split(\"\")\n        .map((c) => c.charCodeAt(0)),\n);\n","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\n\nconst decodeMap = new Map([\n    [0, 65_533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint: (...codePoints: number[]) => string =\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, n/no-unsupported-features/es-builtins\n    String.fromCodePoint ??\n    function (codePoint: number): string {\n        let output = \"\";\n\n        if (codePoint > 0xff_ff) {\n            codePoint -= 0x1_00_00;\n            output += String.fromCharCode(\n                ((codePoint >>> 10) & 0x3_ff) | 0xd8_00,\n            );\n            codePoint = 0xdc_00 | (codePoint & 0x3_ff);\n        }\n\n        output += String.fromCharCode(codePoint);\n        return output;\n    };\n\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint: number): number {\n    if (\n        (codePoint >= 0xd8_00 && codePoint <= 0xdf_ff) ||\n        codePoint > 0x10_ff_ff\n    ) {\n        return 0xff_fd;\n    }\n\n    return decodeMap.get(codePoint) ?? codePoint;\n}\n\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport function decodeCodePoint(codePoint: number): string {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n","import { htmlDecodeTree } from \"./generated/decode-data-html.js\";\nimport { xmlDecodeTree } from \"./generated/decode-data-xml.js\";\nimport { replaceCodePoint, fromCodePoint } from \"./decode-codepoint.js\";\n\nconst enum CharCodes {\n    NUM = 35, // \"#\"\n    SEMI = 59, // \";\"\n    EQUALS = 61, // \"=\"\n    ZERO = 48, // \"0\"\n    NINE = 57, // \"9\"\n    LOWER_A = 97, // \"a\"\n    LOWER_F = 102, // \"f\"\n    LOWER_X = 120, // \"x\"\n    LOWER_Z = 122, // \"z\"\n    UPPER_A = 65, // \"A\"\n    UPPER_F = 70, // \"F\"\n    UPPER_Z = 90, // \"Z\"\n}\n\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b10_0000;\n\nexport enum BinTrieFlags {\n    VALUE_LENGTH = 0b1100_0000_0000_0000,\n    BRANCH_LENGTH = 0b0011_1111_1000_0000,\n    JUMP_TABLE = 0b0000_0000_0111_1111,\n}\n\nfunction isNumber(code: number): boolean {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\n\nfunction isHexadecimalCharacter(code: number): boolean {\n    return (\n        (code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F)\n    );\n}\n\nfunction isAsciiAlphaNumeric(code: number): boolean {\n    return (\n        (code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code)\n    );\n}\n\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code: number): boolean {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\n\nconst enum EntityDecoderState {\n    EntityStart,\n    NumericStart,\n    NumericDecimal,\n    NumericHex,\n    NamedEntity,\n}\n\nexport enum DecodingMode {\n    /** Entities in text nodes that can end with any character. */\n    Legacy = 0,\n    /** Only allow entities terminated with a semicolon. */\n    Strict = 1,\n    /** Entities in attributes have limitations on ending characters. */\n    Attribute = 2,\n}\n\n/**\n * Producers for character reference errors as defined in the HTML spec.\n */\nexport interface EntityErrorProducer {\n    missingSemicolonAfterCharacterReference(): void;\n    absenceOfDigitsInNumericCharacterReference(\n        consumedCharacters: number,\n    ): void;\n    validateNumericCharacterReference(code: number): void;\n}\n\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n        /** The tree used to decode entities. */\n        private readonly decodeTree: Uint16Array,\n        /**\n         * The function that is called when a codepoint is decoded.\n         *\n         * For multi-byte named entities, this will be called multiple times,\n         * with the second codepoint, and the same `consumed` value.\n         *\n         * @param codepoint The decoded codepoint.\n         * @param consumed The number of bytes consumed by the decoder.\n         */\n        private readonly emitCodePoint: (cp: number, consumed: number) => void,\n        /** An object that is used to produce errors. */\n        private readonly errors?: EntityErrorProducer | undefined,\n    ) {}\n\n    /** The current state of the decoder. */\n    private state = EntityDecoderState.EntityStart;\n    /** Characters that were consumed while parsing an entity. */\n    private consumed = 1;\n    /**\n     * The result of the entity.\n     *\n     * Either the result index of a numeric entity, or the codepoint of a\n     * numeric entity.\n     */\n    private result = 0;\n\n    /** The current index in the decode tree. */\n    private treeIndex = 0;\n    /** The number of characters that were consumed in excess. */\n    private excess = 1;\n    /** The mode in which the decoder is operating. */\n    private decodeMode = DecodingMode.Strict;\n\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode: DecodingMode): void {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(input: string, offset: number): number {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (input.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(input, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(input, offset);\n            }\n\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(input, offset);\n            }\n\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(input, offset);\n            }\n\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(input, offset);\n            }\n\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(input, offset);\n            }\n        }\n    }\n\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    private stateNumericStart(input: string, offset: number): number {\n        if (offset >= input.length) {\n            return -1;\n        }\n\n        if ((input.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(input, offset + 1);\n        }\n\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(input, offset);\n    }\n\n    private addToNumericResult(\n        input: string,\n        start: number,\n        end: number,\n        base: number,\n    ): void {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                Number.parseInt(input.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    private stateNumericHex(input: string, offset: number): number {\n        const startIndex = offset;\n\n        while (offset < input.length) {\n            const char = input.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            } else {\n                this.addToNumericResult(input, startIndex, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n\n        this.addToNumericResult(input, startIndex, offset, 16);\n\n        return -1;\n    }\n\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    private stateNumericDecimal(input: string, offset: number): number {\n        const startIndex = offset;\n\n        while (offset < input.length) {\n            const char = input.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            } else {\n                this.addToNumericResult(input, startIndex, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n\n        this.addToNumericResult(input, startIndex, offset, 10);\n\n        return -1;\n    }\n\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    private emitNumericEntity(lastCp: number, expectedLength: number): number {\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            this.errors?.absenceOfDigitsInNumericCharacterReference(\n                this.consumed,\n            );\n            return 0;\n        }\n\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        } else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n\n        return this.consumed;\n    }\n\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    private stateNamedEntity(input: string, offset: number): number {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n\n        for (; offset < input.length; offset++, this.excess++) {\n            const char = input.charCodeAt(offset);\n\n            this.treeIndex = determineBranch(\n                decodeTree,\n                current,\n                this.treeIndex + Math.max(1, valueLength),\n                char,\n            );\n\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(\n                        this.treeIndex,\n                        valueLength,\n                        this.consumed + this.excess,\n                    );\n                }\n\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    private emitNotTerminatedNamedEntity(): number {\n        const { result, decodeTree } = this;\n\n        const valueLength =\n            (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        this.errors?.missingSemicolonAfterCharacterReference();\n\n        return this.consumed;\n    }\n\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    private emitNamedEntityData(\n        result: number,\n        valueLength: number,\n        consumed: number,\n    ): number {\n        const { decodeTree } = this;\n\n        this.emitCodePoint(\n            valueLength === 1\n                ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n                : decodeTree[result + 1],\n            consumed,\n        );\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n\n        return consumed;\n    }\n\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end(): number {\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                this.errors?.absenceOfDigitsInNumericCharacterReference(\n                    this.consumed,\n                );\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree: Uint16Array) {\n    let returnValue = \"\";\n    const decoder = new EntityDecoder(\n        decodeTree,\n        (data) => (returnValue += fromCodePoint(data)),\n    );\n\n    return function decodeWithTrie(\n        input: string,\n        decodeMode: DecodingMode,\n    ): string {\n        let lastIndex = 0;\n        let offset = 0;\n\n        while ((offset = input.indexOf(\"&\", offset)) >= 0) {\n            returnValue += input.slice(lastIndex, offset);\n\n            decoder.startEntity(decodeMode);\n\n            const length = decoder.write(\n                input,\n                // Skip the \"&\"\n                offset + 1,\n            );\n\n            if (length < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n\n            lastIndex = offset + length;\n            // If `length` is 0, skip the current `&` and continue.\n            offset = length === 0 ? lastIndex + 1 : lastIndex;\n        }\n\n        const result = returnValue + input.slice(lastIndex);\n\n        // Make sure we don't keep a reference to the final string.\n        returnValue = \"\";\n\n        return result;\n    };\n}\n\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(\n    decodeTree: Uint16Array,\n    current: number,\n    nodeIndex: number,\n    char: number,\n): number {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIndex : -1;\n    }\n\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIndex + value] - 1;\n    }\n\n    // Case 3: Multiple branches encoded in dictionary\n\n    // Binary search for the character.\n    let lo = nodeIndex;\n    let hi = lo + branchCount - 1;\n\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midValue = decodeTree[mid];\n\n        if (midValue < char) {\n            lo = mid + 1;\n        } else if (midValue > char) {\n            hi = mid - 1;\n        } else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n\n    return -1;\n}\n\nconst htmlDecoder = /* #__PURE__ */ getDecoder(htmlDecodeTree);\nconst xmlDecoder = /* #__PURE__ */ getDecoder(xmlDecodeTree);\n\n/**\n * Decodes an HTML string.\n *\n * @param htmlString The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(\n    htmlString: string,\n    mode: DecodingMode = DecodingMode.Legacy,\n): string {\n    return htmlDecoder(htmlString, mode);\n}\n\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param htmlAttribute The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(htmlAttribute: string): string {\n    return htmlDecoder(htmlAttribute, DecodingMode.Attribute);\n}\n\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param htmlString The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(htmlString: string): string {\n    return htmlDecoder(htmlString, DecodingMode.Strict);\n}\n\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param xmlString The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(xmlString: string): string {\n    return xmlDecoder(xmlString, DecodingMode.Strict);\n}\n\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree } from \"./generated/decode-data-html.js\";\nexport { xmlDecodeTree } from \"./generated/decode-data-xml.js\";\n\nexport {\n    decodeCodePoint,\n    replaceCodePoint,\n    fromCodePoint,\n} from \"./decode-codepoint.js\";\n","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SEARCH\"] = \"search\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SEARCH\"] = 94] = \"SEARCH\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 95] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 96] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 97] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 98] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 99] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 100] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 101] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 102] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 103] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 104] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 105] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 106] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 107] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 108] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 109] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 110] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 111] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 112] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 113] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 114] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 115] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 116] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 117] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 118] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 119] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 120] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 121] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 122] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 123] = \"XMP\";\n})(TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SEARCH, TAG_ID.SEARCH],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport const NUMBERED_HEADERS = new Set([$.H1, $.H2, $.H3, $.H4, $.H5, $.H6]);\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, EntityDecoder, DecodingMode } from 'entities/decode';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 72] = \"AMBIGUOUS_AMPERSAND\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\nfunction getErrorForNumericCharacterReference(code) {\n    if (code === $.NULL) {\n        return ERR.nullCharacterReference;\n    }\n    else if (code > 1114111) {\n        return ERR.characterReferenceOutsideUnicodeRange;\n    }\n    else if (isSurrogate(code)) {\n        return ERR.surrogateCharacterReference;\n    }\n    else if (isUndefinedCodePoint(code)) {\n        return ERR.noncharacterCharacterReference;\n    }\n    else if (isControlCodePoint(code) || code === $.CARRIAGE_RETURN) {\n        return ERR.controlCharacterReference;\n    }\n    return null;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.entityStartPos = 0;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n        this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) => {\n            // Note: Set `pos` _before_ flushing, as flushing might drop\n            // the current chunk and invalidate `entityStartPos`.\n            this.preprocessor.pos = this.entityStartPos + consumed - 1;\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }, handler.onParseError\n            ? {\n                missingSemicolonAfterCharacterReference: () => {\n                    this._err(ERR.missingSemicolonAfterCharacterReference, 1);\n                },\n                absenceOfDigitsInNumericCharacterReference: (consumed) => {\n                    this._err(ERR.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + consumed);\n                },\n                validateNumericCharacterReference: (code) => {\n                    const error = getErrorForNumericCharacterReference(code);\n                    if (error)\n                        this._err(error, 1);\n                },\n            }\n            : undefined);\n    }\n    //Errors\n    _err(code, cpOffset = 0) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code, cpOffset));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this.preprocessor.retreat(this.consumedAfterSnapshot);\n            this.consumedAfterSnapshot = 0;\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: The specification uses only one type of character token (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type === type) {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n            else {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _startCharacterReference() {\n        this.returnState = this.state;\n        this.state = State.CHARACTER_REFERENCE;\n        this.entityStartPos = this.preprocessor.pos;\n        this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? DecodingMode.Attribute : DecodingMode.Legacy);\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference();\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference() {\n        let length = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);\n        if (length < 0) {\n            if (this.preprocessor.lastChunkWritten) {\n                length = this.entityDecoder.end();\n            }\n            else {\n                // Wait for the rest of the entity.\n                this.active = false;\n                // Mark the entire buffer as read.\n                this.preprocessor.pos = this.preprocessor.html.length - 1;\n                this.consumedAfterSnapshot = 0;\n                this.preprocessor.endOfChunkHit = true;\n                return;\n            }\n        }\n        if (length === 0) {\n            // This was not a valid entity. Go back to the beginning, and\n            // figure out what to do.\n            this.preprocessor.pos = this.entityStartPos;\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state =\n                !this._isCharacterReferenceInAttribute() && isAsciiAlphaNumeric(this.preprocessor.peek(1))\n                    ? State.AMBIGUOUS_AMPERSAND\n                    : this.returnState;\n        }\n        else {\n            // We successfully parsed an entity. Switch to the return state.\n            this.state = this.returnState;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this.state = this.returnState;\n            this._callState(cp);\n        }\n    }\n}\n","import { TAG_ID as $, NS, NUMBERED_HEADERS } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENTS_HTML = new Set([\n    $.APPLET,\n    $.CAPTION,\n    $.HTML,\n    $.MARQUEE,\n    $.OBJECT,\n    $.TABLE,\n    $.TD,\n    $.TEMPLATE,\n    $.TH,\n]);\nconst SCOPING_ELEMENTS_HTML_LIST = new Set([...SCOPING_ELEMENTS_HTML, $.OL, $.UL]);\nconst SCOPING_ELEMENTS_HTML_BUTTON = new Set([...SCOPING_ELEMENTS_HTML, $.BUTTON]);\nconst SCOPING_ELEMENTS_MATHML = new Set([$.ANNOTATION_XML, $.MI, $.MN, $.MO, $.MS, $.MTEXT]);\nconst SCOPING_ELEMENTS_SVG = new Set([$.DESC, $.FOREIGN_OBJECT, $.TITLE]);\nconst TABLE_ROW_CONTEXT = new Set([$.TR, $.TEMPLATE, $.HTML]);\nconst TABLE_BODY_CONTEXT = new Set([$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML]);\nconst TABLE_CONTEXT = new Set([$.TABLE, $.TEMPLATE, $.HTML]);\nconst TABLE_CELLS = new Set([$.TD, $.TH]);\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        if (this.current && this.currentTagId !== undefined) {\n            this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n        }\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(Math.max(targetIdx, 0));\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(Math.max(idx, 0));\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(Math.max(idx, 0));\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NUMBERED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.has(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInDynamicScope(tagName, htmlScope) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (tn === tagName)\n                        return true;\n                    if (htmlScope.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML);\n    }\n    hasInListItemScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_LIST);\n    }\n    hasInButtonScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_BUTTON);\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (NUMBERED_HEADERS.has(tn))\n                        return true;\n                    if (SCOPING_ELEMENTS_HTML.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.OPTION:\n                case $.OPTGROUP: {\n                    break;\n                }\n                default: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (this.currentTagId !== undefined && IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (this.currentTagId !== undefined && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== undefined &&\n            this.currentTagId !== exclusionId &&\n            IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex !== -1) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx === -1) {\n            this.entries.length = 0;\n        }\n        else {\n            this.entries.splice(0, markerIdx + 1);\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n","import { DOCUMENT_MODE } from '../common/html.js';\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    createTextNode(value) {\n        return {\n            nodeName: '#text',\n            value,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, defaultTreeAdapter.createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, defaultTreeAdapter.createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, NUMBERED_HEADERS, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, \n    /** @internal */\n    fragmentContext = null, \n    /** @internal */\n    scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        /** @internal */\n        this.insertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.headElement = null;\n        /** @internal */\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         *\n         * @internal\n         */\n        this.tmplInsertionModeStack = [];\n        /** @internal */\n        this.pendingCharacterTokens = [];\n        /** @internal */\n        this.hasNonWhitespacePendingCharacterToken = false;\n        /** @internal */\n        this.framesetOk = true;\n        /** @internal */\n        this.skipNextNewLine = false;\n        /** @internal */\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    /** @internal */\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    /** @internal */\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    /** @internal */\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || (current && this.treeAdapter.getNamespaceURI(current) === NS.HTML);\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode =\n            !isHTML && current !== undefined && tid !== undefined && !this._isIntegrationPoint(tid, current);\n    }\n    /** @protected */\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    /** @protected */\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    /** @protected */\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    /** @protected */\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    /** @protected */\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent !== null && parent !== void 0 ? parent : this.document, element);\n        }\n    }\n    /**\n     * For self-closing tags. Add an element to the tree, but skip adding it\n     * to the stack.\n     */\n    /** @protected */\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    /** @protected */\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    /** @protected */\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    /** @protected */\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    /** @protected */\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    /** @protected */\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    /** @protected */\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    /** @protected */\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    /** @protected */\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                currentTagId !== undefined &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    /** @protected */\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    /** @protected */\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    /** @protected */\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex === -1 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    /** @protected */\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    /** @protected */\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    /** @protected */\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    /** @protected */\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    /** @protected */\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    /** @protected */\n    _shouldFosterParentOnInsertion() {\n        return (this.fosterParentingEnabled &&\n            this.openElements.currentTagId !== undefined &&\n            this._isElementCausesFosterParenting(this.openElements.currentTagId));\n    }\n    /** @protected */\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    /** @protected */\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    /** @protected */\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    /** @internal */\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     * @protected\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(Math.max(idx, 0));\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (p.openElements.currentTagId !== undefined && NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\n//<noembed>/<noframes> as rawtext.\nfunction rawTextStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED:\n        case $.NOFRAMES: {\n            rawTextStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                rawTextStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (p.openElements.currentTagId !== undefined && TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.HR: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        p.openElements.currentTagId !== undefined &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n","export const xmlReplacer: RegExp = /[\"$&'<>\\u0080-\\uFFFF]/g;\n\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n\n// For compatibility with node < 4, we wrap `codePointAt`\nexport const getCodePoint: (c: string, index: number) => number =\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    String.prototype.codePointAt == null\n        ? (c: string, index: number): number =>\n              (c.charCodeAt(index) & 0xfc_00) === 0xd8_00\n                  ? (c.charCodeAt(index) - 0xd8_00) * 0x4_00 +\n                    c.charCodeAt(index + 1) -\n                    0xdc_00 +\n                    0x1_00_00\n                  : c.charCodeAt(index)\n        : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n          (input: string, index: number): number => input.codePointAt(index)!;\n\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexport function encodeXML(input: string): string {\n    let returnValue = \"\";\n    let lastIndex = 0;\n    let match;\n\n    while ((match = xmlReplacer.exec(input)) !== null) {\n        const { index } = match;\n        const char = input.charCodeAt(index);\n        const next = xmlCodeMap.get(char);\n\n        if (next === undefined) {\n            returnValue += `${input.substring(lastIndex, index)}&#x${getCodePoint(\n                input,\n                index,\n            ).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIndex = xmlReplacer.lastIndex += Number(\n                (char & 0xfc_00) === 0xd8_00,\n            );\n        } else {\n            returnValue += input.substring(lastIndex, index) + next;\n            lastIndex = index + 1;\n        }\n    }\n\n    return returnValue + input.substr(lastIndex);\n}\n\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexport const escape: typeof encodeXML = encodeXML;\n\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(\n    regex: RegExp,\n    map: Map<number, string>,\n): (data: string) => string {\n    return function escape(data: string): string {\n        let match;\n        let lastIndex = 0;\n        let result = \"\";\n\n        while ((match = regex.exec(data))) {\n            if (lastIndex !== match.index) {\n                result += data.substring(lastIndex, match.index);\n            }\n\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0))!;\n\n            // Every match will be of length 1\n            lastIndex = match.index + 1;\n        }\n\n        return result + data.substring(lastIndex);\n    };\n}\n\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexport const escapeUTF8: (data: string) => string = /* #__PURE__ */ getEscaper(\n    /[\"&'<>]/g,\n    xmlCodeMap,\n);\n\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeAttribute: (data: string) => string =\n    /* #__PURE__ */ getEscaper(\n        /[\"&\\u00A0]/g,\n        new Map([\n            [34, \"&quot;\"],\n            [38, \"&amp;\"],\n            [160, \"&nbsp;\"],\n        ]),\n    );\n\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeText: (data: string) => string = /* #__PURE__ */ getEscaper(\n    /[&<>\\u00A0]/g,\n    new Map([\n        [38, \"&amp;\"],\n        [60, \"&lt;\"],\n        [62, \"&gt;\"],\n        [160, \"&nbsp;\"],\n    ]),\n);\n","import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/escape';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const str = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (attr.namespace) {\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        }\n        else {\n            html += attr.name;\n        }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n","import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */ Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\nexport { ERR as ErrorCodes } from './common/error-codes.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\nexport * as html from './common/html.js';\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n    return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n","/**\n * @typedef ErrorInfo\n *   Info on a `parse5` error.\n * @property {string} reason\n *   Reason of error.\n * @property {string} description\n *   More info on error.\n * @property {false} [url]\n *   Turn off if this is not documented in the html5 spec (optional).\n */\n\nexport const errors = {\n  /** @type {ErrorInfo} */\n  abandonedHeadElementChild: {\n    reason: 'Unexpected metadata element after head',\n    description:\n      'Unexpected element after head. Expected the element before `</head>`',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  abruptClosingOfEmptyComment: {\n    reason: 'Unexpected abruptly closed empty comment',\n    description: 'Unexpected `>` or `->`. Expected `-->` to close comments'\n  },\n  /** @type {ErrorInfo} */\n  abruptDoctypePublicIdentifier: {\n    reason: 'Unexpected abruptly closed public identifier',\n    description:\n      'Unexpected `>`. Expected a closing `\"` or `\\'` after the public identifier'\n  },\n  /** @type {ErrorInfo} */\n  abruptDoctypeSystemIdentifier: {\n    reason: 'Unexpected abruptly closed system identifier',\n    description:\n      'Unexpected `>`. Expected a closing `\"` or `\\'` after the identifier identifier'\n  },\n  /** @type {ErrorInfo} */\n  absenceOfDigitsInNumericCharacterReference: {\n    reason: 'Unexpected non-digit at start of numeric character reference',\n    description:\n      'Unexpected `%c`. Expected `[0-9]` for decimal references or `[0-9a-fA-F]` for hexadecimal references'\n  },\n  /** @type {ErrorInfo} */\n  cdataInHtmlContent: {\n    reason: 'Unexpected CDATA section in HTML',\n    description:\n      'Unexpected `<![CDATA[` in HTML. Remove it, use a comment, or encode special characters instead'\n  },\n  /** @type {ErrorInfo} */\n  characterReferenceOutsideUnicodeRange: {\n    reason: 'Unexpected too big numeric character reference',\n    description:\n      'Unexpectedly high character reference. Expected character references to be at most hexadecimal 10ffff (or decimal 1114111)'\n  },\n  /** @type {ErrorInfo} */\n  closingOfElementWithOpenChildElements: {\n    reason: 'Unexpected closing tag with open child elements',\n    description:\n      'Unexpectedly closing tag. Expected other tags to be closed first',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  controlCharacterInInputStream: {\n    reason: 'Unexpected control character',\n    description:\n      'Unexpected control character `%x`. Expected a non-control code point, 0x00, or ASCII whitespace'\n  },\n  /** @type {ErrorInfo} */\n  controlCharacterReference: {\n    reason: 'Unexpected control character reference',\n    description:\n      'Unexpectedly control character in reference. Expected a non-control code point, 0x00, or ASCII whitespace'\n  },\n  /** @type {ErrorInfo} */\n  disallowedContentInNoscriptInHead: {\n    reason: 'Disallowed content inside `<noscript>` in `<head>`',\n    description:\n      'Unexpected text character `%c`. Only use text in `<noscript>`s in `<body>`',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  duplicateAttribute: {\n    reason: 'Unexpected duplicate attribute',\n    description:\n      'Unexpectedly double attribute. Expected attributes to occur only once'\n  },\n  /** @type {ErrorInfo} */\n  endTagWithAttributes: {\n    reason: 'Unexpected attribute on closing tag',\n    description: 'Unexpected attribute. Expected `>` instead'\n  },\n  /** @type {ErrorInfo} */\n  endTagWithTrailingSolidus: {\n    reason: 'Unexpected slash at end of closing tag',\n    description: 'Unexpected `%c-1`. Expected `>` instead'\n  },\n  /** @type {ErrorInfo} */\n  endTagWithoutMatchingOpenElement: {\n    reason: 'Unexpected unopened end tag',\n    description: 'Unexpected end tag. Expected no end tag or another end tag',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  eofBeforeTagName: {\n    reason: 'Unexpected end of file',\n    description: 'Unexpected end of file. Expected tag name instead'\n  },\n  /** @type {ErrorInfo} */\n  eofInCdata: {\n    reason: 'Unexpected end of file in CDATA',\n    description: 'Unexpected end of file. Expected `]]>` to close the CDATA'\n  },\n  /** @type {ErrorInfo} */\n  eofInComment: {\n    reason: 'Unexpected end of file in comment',\n    description: 'Unexpected end of file. Expected `-->` to close the comment'\n  },\n  /** @type {ErrorInfo} */\n  eofInDoctype: {\n    reason: 'Unexpected end of file in doctype',\n    description:\n      'Unexpected end of file. Expected a valid doctype (such as `<!doctype html>`)'\n  },\n  /** @type {ErrorInfo} */\n  eofInElementThatCanContainOnlyText: {\n    reason: 'Unexpected end of file in element that can only contain text',\n    description: 'Unexpected end of file. Expected text or a closing tag',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  eofInScriptHtmlCommentLikeText: {\n    reason: 'Unexpected end of file in comment inside script',\n    description: 'Unexpected end of file. Expected `-->` to close the comment'\n  },\n  /** @type {ErrorInfo} */\n  eofInTag: {\n    reason: 'Unexpected end of file in tag',\n    description: 'Unexpected end of file. Expected `>` to close the tag'\n  },\n  /** @type {ErrorInfo} */\n  incorrectlyClosedComment: {\n    reason: 'Incorrectly closed comment',\n    description: 'Unexpected `%c-1`. Expected `-->` to close the comment'\n  },\n  /** @type {ErrorInfo} */\n  incorrectlyOpenedComment: {\n    reason: 'Incorrectly opened comment',\n    description: 'Unexpected `%c`. Expected `<!--` to open the comment'\n  },\n  /** @type {ErrorInfo} */\n  invalidCharacterSequenceAfterDoctypeName: {\n    reason: 'Invalid sequence after doctype name',\n    description: 'Unexpected sequence at `%c`. Expected `public` or `system`'\n  },\n  /** @type {ErrorInfo} */\n  invalidFirstCharacterOfTagName: {\n    reason: 'Invalid first character in tag name',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  /** @type {ErrorInfo} */\n  misplacedDoctype: {\n    reason: 'Misplaced doctype',\n    description: 'Unexpected doctype. Expected doctype before head',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  misplacedStartTagForHeadElement: {\n    reason: 'Misplaced `<head>` start tag',\n    description:\n      'Unexpected start tag `<head>`. Expected `<head>` directly after doctype',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  missingAttributeValue: {\n    reason: 'Missing attribute value',\n    description:\n      'Unexpected `%c-1`. Expected an attribute value or no `%c-1` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingDoctype: {\n    reason: 'Missing doctype before other content',\n    description: 'Expected a `<!doctype html>` before anything else',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  missingDoctypeName: {\n    reason: 'Missing doctype name',\n    description: 'Unexpected doctype end at `%c`. Expected `html` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingDoctypePublicIdentifier: {\n    reason: 'Missing public identifier in doctype',\n    description: 'Unexpected `%c`. Expected identifier for `public` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingDoctypeSystemIdentifier: {\n    reason: 'Missing system identifier in doctype',\n    description:\n      'Unexpected `%c`. Expected identifier for `system` instead (suggested: `\"about:legacy-compat\"`)'\n  },\n  /** @type {ErrorInfo} */\n  missingEndTagName: {\n    reason: 'Missing name in end tag',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  /** @type {ErrorInfo} */\n  missingQuoteBeforeDoctypePublicIdentifier: {\n    reason: 'Missing quote before public identifier in doctype',\n    description: 'Unexpected `%c`. Expected `\"` or `\\'` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingQuoteBeforeDoctypeSystemIdentifier: {\n    reason: 'Missing quote before system identifier in doctype',\n    description: 'Unexpected `%c`. Expected `\"` or `\\'` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingSemicolonAfterCharacterReference: {\n    reason: 'Missing semicolon after character reference',\n    description: 'Unexpected `%c`. Expected `;` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceAfterDoctypePublicKeyword: {\n    reason: 'Missing whitespace after public identifier in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceAfterDoctypeSystemKeyword: {\n    reason: 'Missing whitespace after system identifier in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceBeforeDoctypeName: {\n    reason: 'Missing whitespace before doctype name',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceBetweenAttributes: {\n    reason: 'Missing whitespace between attributes',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: {\n    reason:\n      'Missing whitespace between public and system identifiers in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  nestedComment: {\n    reason: 'Unexpected nested comment',\n    description: 'Unexpected `<!--`. Expected `-->`'\n  },\n  /** @type {ErrorInfo} */\n  nestedNoscriptInHead: {\n    reason: 'Unexpected nested `<noscript>` in `<head>`',\n    description:\n      'Unexpected `<noscript>`. Expected a closing tag or a meta element',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  nonConformingDoctype: {\n    reason: 'Unexpected non-conforming doctype declaration',\n    description:\n      'Expected `<!doctype html>` or `<!doctype html system \"about:legacy-compat\">`',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  nonVoidHtmlElementStartTagWithTrailingSolidus: {\n    reason: 'Unexpected trailing slash on start tag of non-void element',\n    description: 'Unexpected `/`. Expected `>` instead'\n  },\n  /** @type {ErrorInfo} */\n  noncharacterCharacterReference: {\n    reason:\n      'Unexpected noncharacter code point referenced by character reference',\n    description: 'Unexpected code point. Do not use noncharacters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  noncharacterInInputStream: {\n    reason: 'Unexpected noncharacter character',\n    description: 'Unexpected code point `%x`. Do not use noncharacters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  nullCharacterReference: {\n    reason: 'Unexpected NULL character referenced by character reference',\n    description: 'Unexpected code point. Do not use NULL characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  openElementsLeftAfterEof: {\n    reason: 'Unexpected end of file',\n    description: 'Unexpected end of file. Expected closing tag instead',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  surrogateCharacterReference: {\n    reason: 'Unexpected surrogate character referenced by character reference',\n    description:\n      'Unexpected code point. Do not use lone surrogate characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  surrogateInInputStream: {\n    reason: 'Unexpected surrogate character',\n    description:\n      'Unexpected code point `%x`. Do not use lone surrogate characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedCharacterAfterDoctypeSystemIdentifier: {\n    reason: 'Invalid character after system identifier in doctype',\n    description: 'Unexpected character at `%c`. Expected `>`'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedCharacterInAttributeName: {\n    reason: 'Unexpected character in attribute name',\n    description:\n      'Unexpected `%c`. Expected whitespace, `/`, `>`, `=`, or probably an ASCII letter'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedCharacterInUnquotedAttributeValue: {\n    reason: 'Unexpected character in unquoted attribute value',\n    description: 'Unexpected `%c`. Quote the attribute value to include it'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedEqualsSignBeforeAttributeName: {\n    reason: 'Unexpected equals sign before attribute name',\n    description: 'Unexpected `%c`. Add an attribute name before it'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedNullCharacter: {\n    reason: 'Unexpected NULL character',\n    description:\n      'Unexpected code point `%x`. Do not use NULL characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedQuestionMarkInsteadOfTagName: {\n    reason: 'Unexpected question mark instead of tag name',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedSolidusInTag: {\n    reason: 'Unexpected slash in tag',\n    description:\n      'Unexpected `%c-1`. Expected it followed by `>` or in a quoted attribute value'\n  },\n  /** @type {ErrorInfo} */\n  unknownNamedCharacterReference: {\n    reason: 'Unexpected unknown named character reference',\n    description:\n      'Unexpected character reference. Expected known named character references'\n  }\n}\n","/**\n * @import {Root} from 'hast'\n * @import {ParserError} from 'parse5'\n * @import {Value} from 'vfile'\n * @import {ErrorCode, Options} from './types.js'\n */\n\nimport {ok as assert} from 'devlop'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {parse, parseFragment} from 'parse5'\nimport {VFile} from 'vfile'\nimport {VFileMessage} from 'vfile-message'\nimport {errors} from './errors.js'\n\nconst base = 'https://html.spec.whatwg.org/multipage/parsing.html#parse-error-'\n\nconst dashToCamelRe = /-[a-z]/g\nconst formatCRe = /%c(?:([-+])(\\d+))?/g\nconst formatXRe = /%x/g\n\nconst fatalities = {2: true, 1: false, 0: null}\n\n/** @type {Readonly<Options>} */\nconst emptyOptions = {}\n\n/**\n * Turn serialized HTML into a hast tree.\n *\n * @param {VFile | Value} value\n *   Serialized HTML to parse.\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Root}\n *   Tree.\n */\nexport function fromHtml(value, options) {\n  const settings = options || emptyOptions\n  const onerror = settings.onerror\n  const file = value instanceof VFile ? value : new VFile(value)\n  const parseFunction = settings.fragment ? parseFragment : parse\n  const document = String(file)\n  const p5Document = parseFunction(document, {\n    sourceCodeLocationInfo: true,\n    // Note `parse5` types currently do not allow `undefined`.\n    onParseError: settings.onerror ? internalOnerror : null,\n    scriptingEnabled: false\n  })\n\n  // `parse5` returns document which are always mapped to roots.\n  return /** @type {Root} */ (\n    fromParse5(p5Document, {\n      file,\n      space: settings.space,\n      verbose: settings.verbose\n    })\n  )\n\n  /**\n   * Handle a parse error.\n   *\n   * @param {ParserError} error\n   *   Parse5 error.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function internalOnerror(error) {\n    const code = error.code\n    const name = camelcase(code)\n    const setting = settings[name]\n    const config = setting === null || setting === undefined ? true : setting\n    const level = typeof config === 'number' ? config : config ? 1 : 0\n\n    if (level) {\n      const info = errors[name]\n      assert(info, 'expected known error from `parse5`')\n\n      const message = new VFileMessage(format(info.reason), {\n        place: {\n          start: {\n            line: error.startLine,\n            column: error.startCol,\n            offset: error.startOffset\n          },\n          end: {\n            line: error.endLine,\n            column: error.endCol,\n            offset: error.endOffset\n          }\n        },\n        ruleId: code,\n        source: 'hast-util-from-html'\n      })\n\n      if (file.path) {\n        message.file = file.path\n        message.name = file.path + ':' + message.name\n      }\n\n      message.fatal = fatalities[level]\n      message.note = format(info.description)\n      message.url = info.url === false ? undefined : base + code\n\n      assert(onerror, '`internalOnerror` is not passed if `onerror` is not set')\n      onerror(message)\n    }\n\n    /**\n     * Format a human readable string about an error.\n     *\n     * @param {string} value\n     *   Value to format.\n     * @returns {string}\n     *   Formatted.\n     */\n    function format(value) {\n      return value.replace(formatCRe, formatC).replace(formatXRe, formatX)\n\n      /**\n       * Format the character.\n       *\n       * @param {string} _\n       *   Match.\n       * @param {string} $1\n       *   Sign (`-` or `+`, optional).\n       * @param {string} $2\n       *   Offset.\n       * @returns {string}\n       *   Formatted.\n       */\n      function formatC(_, $1, $2) {\n        const offset =\n          ($2 ? Number.parseInt($2, 10) : 0) * ($1 === '-' ? -1 : 1)\n        const char = document.charAt(error.startOffset + offset)\n        return visualizeCharacter(char)\n      }\n\n      /**\n       * Format the character code.\n       *\n       * @returns {string}\n       *   Formatted.\n       */\n      function formatX() {\n        return visualizeCharacterCode(document.charCodeAt(error.startOffset))\n      }\n    }\n  }\n}\n\n/**\n * @param {string} value\n *   Error code in dash case.\n * @returns {ErrorCode}\n *   Error code in camelcase.\n */\nfunction camelcase(value) {\n  // This should match an error code.\n  return /** @type {ErrorCode} */ (value.replace(dashToCamelRe, dashToCamel))\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @returns {string}\n *   Camelcased.\n */\nfunction dashToCamel($0) {\n  return $0.charAt(1).toUpperCase()\n}\n\n/**\n * @param {string} char\n *   Character.\n * @returns {string}\n *   Formatted.\n */\nfunction visualizeCharacter(char) {\n  return char === '`' ? '` ` `' : char\n}\n\n/**\n * @param {number} charCode\n *   Character code.\n * @returns {string}\n *   Formatted.\n */\nfunction visualizeCharacterCode(charCode) {\n  return '0x' + charCode.toString(16).toUpperCase()\n}\n","/**\n * @import {Root} from 'hast'\n * @import {Options as FromHtmlOptions} from 'hast-util-from-html'\n * @import {Parser, Processor} from 'unified'\n */\n\n/**\n * @typedef {Omit<FromHtmlOptions, 'onerror'> & RehypeParseFields} Options\n *   Configuration.\n *\n * @typedef RehypeParseFields\n *   Extra fields.\n * @property {boolean | null | undefined} [emitParseErrors=false]\n *   Whether to emit parse errors while parsing (default: `false`).\n *\n *   > 👉 **Note**: parse errors are currently being added to HTML.\n *   > Not all errors emitted by parse5 (or us) are specced yet.\n *   > Some documentation may still be missing.\n */\n\nimport {fromHtml} from 'hast-util-from-html'\n\n/**\n * Plugin to add support for parsing from HTML.\n *\n * > 👉 **Note**: this is not an XML parser.\n * > It supports SVG as embedded in HTML.\n * > It does not support the features available in XML.\n * > Passing SVG files might break but fragments of modern SVG should be fine.\n * > Use [`xast-util-from-xml`][xast-util-from-xml] to parse XML.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function rehypeParse(options) {\n  /** @type {Processor<Root>} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n  const {emitParseErrors, ...settings} = {...self.data('settings'), ...options}\n\n  self.parser = parser\n\n  /**\n   * @type {Parser<Root>}\n   */\n  function parser(document, file) {\n    return fromHtml(document, {\n      ...settings,\n      onerror: emitParseErrors\n        ? function (message) {\n            if (file.path) {\n              message.name = file.path + ':' + message.name\n              message.file = file.path\n            }\n\n            file.messages.push(message)\n          }\n        : undefined\n    })\n  }\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @import {Element, Nodes, RootContent, Root} from 'hast'\n * @import {Info, Schema} from 'property-information'\n */\n\n/**\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n */\n\n/**\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n */\n\n/**\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n */\n\n/**\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\n/**\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n */\n\n/**\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n */\n\n/**\n * @typedef {Record<string, PropertyValue | Style>} Properties\n *   Acceptable value for element properties.\n */\n\n/**\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n */\n\n/**\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n */\n\n/**\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n */\n\nimport {parse as parseCommas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as parseSpaces} from 'space-separated-tokens'\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {ReadonlyArray<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive ? createAdjustMap(caseSensitive) : undefined\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    /** @type {Result} */\n    let node\n\n    if (selector === null || selector === undefined) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      const lower = node.tagName.toLowerCase()\n      const adjusted = adjust ? adjust.get(lower) : undefined\n      node.tagName = adjusted || lower\n\n      // Handle properties.\n      if (isChild(properties)) {\n        children.unshift(properties)\n      } else {\n        for (const [key, value] of Object.entries(properties)) {\n          addProperty(schema, node.properties, key, value)\n        }\n      }\n    }\n\n    // Handle children.\n    for (const child of children) {\n      addChild(node.children, child)\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @returns {value is Child}\n *   Whether `value` is definitely a child.\n */\nfunction isChild(value) {\n  // Never properties if not an object.\n  if (value === null || typeof value !== 'object' || Array.isArray(value)) {\n    return true\n  }\n\n  // Never node without `type`; that’s the main discriminator.\n  if (typeof value.type !== 'string') return false\n\n  // Slower check: never property value if object or array with\n  // non-number/strings.\n  const record = /** @type {Record<string, unknown>} */ (value)\n  const keys = Object.keys(value)\n\n  for (const key of keys) {\n    const value = record[key]\n\n    if (value && typeof value === 'object') {\n      if (!Array.isArray(value)) return true\n\n      const list = /** @type {ReadonlyArray<unknown>} */ (value)\n\n      for (const item of list) {\n        if (typeof item !== 'number' && typeof item !== 'string') {\n          return true\n        }\n      }\n    }\n  }\n\n  // Also see empty `children` as a node.\n  if ('children' in value && Array.isArray(value.children)) {\n    return true\n  }\n\n  // Default to properties, someone can always pass an empty object,\n  // put `data: {}` in a node,\n  // or wrap it in an array.\n  return false\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === null || value === undefined) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = parseSpaces(value)\n    } else if (info.commaSeparated) {\n      result = parseCommas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = parseSpaces(parseCommas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = [...value]\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    for (const item of result) {\n      // Assume no booleans in array.\n      finalResult.push(\n        /** @type {number | string} */ (\n          parsePrimitive(info, info.property, item)\n        )\n      )\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    result = properties.className.concat(\n      /** @type {Array<number | string> | number | string} */ (result)\n    )\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  if (value === null || value === undefined) {\n    // Empty.\n  } else if (typeof value === 'number' || typeof value === 'string') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    for (const child of value) {\n      addChild(nodes, child)\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} styles\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(styles) {\n  /** @type {Array<string>} */\n  const result = []\n\n  for (const [key, value] of Object.entries(styles)) {\n    result.push([key, value].join(': '))\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {ReadonlyArray<string>} values\n *   List of properly cased keys.\n * @returns {Map<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Map<string, string>} */\n  const result = new Map()\n\n  for (const value of values) {\n    result.set(value.toLowerCase(), value)\n  }\n\n  return result\n}\n","/**\n * List of case-sensitive SVG tag names.\n *\n * @type {ReadonlyArray<string>}\n */\nexport const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n"],"names":["next","value","from","cr","indexOf","lf","own","hasOwnProperty","proto","Object","prototype","one","state","node","result","nodeName","reference","type","data","patch","quirksMode","mode","children","all","childNodes","file","location","document","String","loc","indices","toOffset","point","line","column","Number","isNaN","length","eol","end","push","offset","toPoint","index","undefined","start","assert","position","schema","namespaceURI","webNamespaces","svg","html","properties","attrs","attribute","name","prefix","call","x","space","s","h","tagName","pos","sourceCodeLocation","startTag","endTag","content","element","nodes","results","to","createLocation","tail","assign","verbose","key","find","property","opening","closing","startLine","startCol","startOffset","endLine","endCol","endOffset","UNDEFINED_CODE_POINTS","Set","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","isSurrogate","cp","isControlCodePoint","isUndefinedCodePoint","has","ERR","Preprocessor","constructor","handler","this","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","lastErrOffset","col","getError","code","cpOffset","_err","onParseError","_addGap","_processSurrogate","nextCp","charCodeAt","isSurrogatePair","$","EOF","surrogateInInputStream","willDropParsedChunk","dropParsedChunk","substring","write","chunk","isLastChunk","insertHtmlAtCurrentPos","startsWith","pattern","caseSensitive","i","peek","CARRIAGE_RETURN","LINE_FEED","advance","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","retreat","count","pop","TokenType","getTokenAttr","token","attrName","htmlDecodeTree","Uint16Array","split","map","c","decodeMap","Map","_a","fromCodePoint","replaceCodePoint","codePoint","get","CharCodes","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isHexadecimalCharacter","UPPER_A","UPPER_F","LOWER_A","LOWER_F","isEntityInAttributeInvalidEnd","EQUALS","UPPER_Z","LOWER_Z","isAsciiAlphaNumeric","EntityDecoder","decodeTree","emitCodePoint","errors","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","startEntity","input","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","base","digitCount","Math","pow","parseInt","substr","startIndex","char","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","current","valueLength","VALUE_LENGTH","determineBranch","max","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","nodeIndex","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midValue","NS","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SCRIPT","SEARCH","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","UNKNOWN","SPECIAL_ELEMENTS","MATHML","XLINK","XML","XMLNS","NUMBERED_HEADERS","State","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLetter","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLower","DIGIT_0","DIGIT_9","isAsciiDigit","toAsciiLower","isWhitespace","SPACE","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","Tokenizer","options","paused","inLoop","inForeignNode","lastStartTagName","active","returnState","entityStartPos","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","entityDecoder","_flushCodePointConsumedAsCharacterReference","error","NULL","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","getErrorForNumericCharacterReference","arguments","_b","sourceCodeLocationInfo","_runParsingLoop","_consume","_ensureHibernation","_callState","pause","resume","writeCallback","Error","_advanceBy","_consumeSequenceIfMatch","_createStartTagToken","START_TAG","tagID","selfClosing","ackSelfClosing","_createEndTagToken","END_TAG","_createCommentToken","COMMENT","_createDoctypeToken","initialName","DOCTYPE","forceQuirks","publicId","systemId","_createCharacterToken","chars","_createAttr","attrNameFirstCh","_leaveAttrName","create","_leaveAttrValue","duplicateAttribute","prepareToken","ct","_emitCurrentCharacterToken","emitCurrentTagToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","emitCurrentComment","onComment","emitCurrentDoctype","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","_emitEOFToken","onEof","_appendCharToCurrentCharacterToken","ch","_emitCodePoint","_emitChars","_startCharacterReference","CHARACTER_REFERENCE","_isCharacterReferenceInAttribute","Legacy","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","_stateCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","LESS_THAN_SIGN","AMPERSAND","unexpectedNullCharacter","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","eofBeforeTagName","invalidFirstCharacterOfTagName","missingEndTagName","eofInTag","handleSpecialEndTag","_cp","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","$$","EQUALS_SIGN","unexpectedEqualsSignBeforeAttributeName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","missingWhitespaceBeforeDoctypeName","fromCharCode","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","SEMICOLON","unknownNamedCharacterReference","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENTS_HTML","SCOPING_ELEMENTS_HTML_LIST","SCOPING_ELEMENTS_HTML_BUTTON","SCOPING_ELEMENTS_MATHML","SCOPING_ELEMENTS_SVG","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","currentTmplContentOrNode","_isInTemplate","treeAdapter","getTemplateContent","items","tagIDs","stackTop","tmplCount","currentTagId","_indexOf","lastIndexOf","getNamespaceURI","_updateCurrentElement","onItemPush","popped","onItemPop","replace","oldElement","newElement","idx","insertAfter","referenceElement","newElementID","insertionIdx","splice","popUntilTagNamePopped","targetIdx","shortenToLength","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","namespace","clearBackTo","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","remove","tryPeekProperlyNestedBodyElement","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInDynamicScope","htmlScope","tn","hasInScope","hasInListItemScope","hasInButtonScope","hasNumberedHeaderInScope","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionId","EntryType","MARKER","Marker","FormattingElementList","entries","bookmark","_getNoahArkConditionCandidates","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","entry","elementAttrs","getAttrList","_ensureNoahArkCondition","neAttrsMap","neAttr","validCandidates","candidate","every","cAttr","insertMarker","unshift","pushElement","Element","insertElementAfterBookmark","bookmarkIdx","removeEntry","entryIndex","clearToLastMarker","markerIdx","getElementEntryInScopeWithTagName","getElementEntry","defaultTreeAdapter","createDocument","NO_QUIRKS","createDocumentFragment","createElement","parentNode","createCommentNode","createTextNode","appendChild","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","setDocumentMode","getDocumentMode","detachNode","insertText","text","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","attr","j","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","_objectSpread","VALID_DOCTYPE_NAME","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","some","MIME_TYPES","SVG_ATTRS_ADJUSTMENT_MAP","toLowerCase","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","isIntegrationPoint","ns","foreignNS","ENCODING","isHtmlIntegrationPoint","isMathMLTextIntegrationPoint","InsertionMode","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","scriptingEnabled","Parser","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","tokenizer","activeFormattingElements","fragmentContextID","_setContextModes","openElements","parse","parser","getFragmentParser","opts","TN","documentMock","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","fragment","_adoptNodes","beforeToken","err","tid","isTop","_setEndLocation","isHTML","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","TEXT","switchToPlaintextParsing","IN_BODY","_getAdjustedCurrentElement","_setDocumentType","docTypeNode","_attachElementToTree","_shouldFosterParentOnInsertion","_fosterParentElement","parent","_appendElement","_insertFakeElement","_insertTemplate","tmpl","_appendCommentNode","_insertCharacters","beforeElement","_findFosterParentingLocation","siblings","textNodeIdx","donor","child","closingToken","ctLoc","endLoc","shouldProcessStartTagTokenInForeignContent","_processToken","_processStartTag","foreignContent","_reconstructActiveFormattingElements","listLength","endIndex","findIndex","_closeTableCell","IN_ROW","_closePElement","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_isSpecialElement","id","p","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","unicode","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","QUIRKS","LIMITED_QUIRKS","doctype","nonConformingDoctype","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagToken","_ref","COLOR","SIZE","FACE","popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","currentNs","adjustedTagName","startTagInForeignContent","startTagBeforeHtml","startTagInBody","startTagBeforeHead","startTagInHead","nestedNoscriptInHead","startTagInHeadNoScript","abandonedHeadElementChild","misplacedStartTagForHeadElement","startTagAfterHead","startTagInTable","TABLE_VOID_ELEMENTS","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","_endTagOutsideForeignContent","endTagInForeignContent","endTagBeforeHtml","endTagWithoutMatchingOpenElement","endTagBeforeHead","templateEndTagInHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInElementThatCanContainOnlyText","eofInText","eofInTemplate","stopParsing","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","lastElement","nextElement","elementEntry","counterOverflow","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","target","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","closingOfElementWithOpenChildElements","shift","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","modeInBody","areaStartTagInBody","isHiddenInput","inputType","TYPE","rawTextStartTagInBody","genericStartTagInBody","bStartTagInBody","activeElementEntry","aStartTagInBody","numberedHeaderStartTagInBody","addressStartTagInBody","elementId","listItemStartTagInBody","hrStartTagInBody","rbStartTagInBody","rtStartTagInBody","preStartTagInBody","xmpStartTagInBody","svgStartTagInBody","htmlStartTagInBody","bodyStartTagInBody","inTemplate","formStartTagInBody","nobrStartTagInBody","mathStartTagInBody","tableStartTagInBody","inputStartTagInBody","paramStartTagInBody","imageStartTagInBody","buttonStartTagInBody","appletStartTagInBody","iframeStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","pEndTagInBody","addressEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","tokenInTable","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","codePointAt","getEscaper","regex","match","lastIndex","exec","parseFragment","reason","description","url","dashToCamelRe","formatCRe","formatXRe","fatalities","emptyOptions","fromHtml","settings","onerror","VFile","parseFunction","p5Document","dashToCamel","camelcase","setting","config","level","info","message","VFileMessage","format","place","ruleId","source","path","fatal","note","_","$1","$2","visualizeCharacter","charAt","charCode","toString","toUpperCase","tree","fromParse5","$0","rehypeParse","_self$data$options","emitParseErrors","_objectWithoutProperties","_excluded","messages","mathml","xlink","xml","xmlns","search","createH","defaultTagName","adjust","values","set","createAdjustMap","selector","_len","Array","_key","props","previous","subvalue","slice","isArray","className","parseSelector","lower","adjusted","record","keys","list","item","isChild","addProperty","addChild","spaceSeparated","parseSpaces","commaSeparated","parseCommas","commaOrSpaceSeparated","join","parsePrimitive","styles","style","finalResult","concat","number","boolean","overloadedBoolean","normalize"],"sourceRoot":""}